#!/bin/bash

FILE1=$1
FILE2=$2
MIN_BLOCK_SIZE=$3

previous_first_file=""
previous_first_line=0
previous_second_file=""
previous_second_line=0
current_block_size=1

{ # Edit both files to replace colons with a placeholder, then add line numbers and file names
  cat "$FILE1" | sed 's/:/!colon!/' | grep -n '' | sed "s|^|${FILE1}:|"
  cat "$FILE2" | sed 's/:/!colon!/' | grep -n '' | sed "s|^|${FILE2}:|"
} |
tr -s ' ' | # Remove extra spaces#
sort -t: -k3 | # Sort by line number
awk -F: '
{
  if (prev_line != "" && $3 == prev_line) {
    if (count == 1) {
      printf "%s:%s", prev_file, prev_line_num
    }
    printf ";%s:%s", $1, $2
    count++
  } else {
    if (count > 1) {
      printf "\n"
    }
    count = 1
  }
  prev_file = $1
  prev_line_num = $2
  prev_line = $3
}' | # Create a group one size 1 for each detected repetition. 
while IFS= read -r line; do # For repetitions with more than one occurrence, create pairs of lines
  IFS=';' read -ra fields <<< "$line"
  for ((i=0; i<${#fields[@]}; i++)); do
    for ((j=i+1; j<${#fields[@]}; j++)); do
      echo "${fields[i]}:${fields[j]}"
    done
  done
done |
{ # Sort the pairs by files and line numbers
  sort -t: -k1,1 -k3,3 -k2,2n -k4,4n
  echo "0:/dev/null:0:/dev/null:0"
} |
while read -r line; do # Sliding window - Collect blocks of consecutive lines into longer blocks
  first_file=$(cut -d: -f1 <<< "$line")
  first_line=$(cut -d: -f2 <<< "$line")
  second_file=$(cut -d: -f3 <<< "$line")
  second_line=$(cut -d: -f4 <<< "$line")
  if [ "$first_file" = "$previous_first_file" ] && [ $first_line -eq $((previous_first_line + 1)) ] && [ "$second_file" = "$previous_second_file" ] && [ $second_line -eq $((previous_second_line + 1)) ]; then
    current_block_size=$((current_block_size + 1))
  elif [[ "$previous_first_file" != "" && "$previous_second_file" != "" && $current_block_size -gt 0 ]]; then
    if ((current_block_size >= MIN_BLOCK_SIZE)); then
      echo "$current_block_size:$previous_first_file:$(($previous_first_line - $current_block_size + 1)):$previous_second_file:$(($previous_second_line - $current_block_size + 1))"
    fi
    current_block_size=1
  fi
  previous_first_file="$first_file"
  previous_first_line="$first_line"
  previous_second_file="$second_file"
  previous_second_line="$second_line"
done |
while read -r line; do # Format the result with the block content processed without the special characters
  file=$(cut -d: -f2 <<< "$line")
  line_number=$(cut -d: -f3 <<< "$line")
  block_size=$(cut -d: -f1 <<< "$line")
  block_content=$(tail -n +"$line_number" "$file" | head -n "$block_size" | sed 's/:/!colon!/' | tr '\n' ' ' | sed 's/ /!space!/g')
  echo "$line:$block_content"
done
